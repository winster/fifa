3.1.7 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@has_childrenT:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode
;i:@imported_filename"shared;0;	[ :@options{ o:Sass::Tree::CommentNode:@silenti :@value"ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;i:@lines[ ;	[ :
@loud0;@o:Sass::Tree::VariableNode:
@expro:Sass::Script::String	;"all;i;@:
@type:identifier;i:
@name" default-transition-property;	[ ;@:@guarded"!defaulto;;o:Sass::Script::Number:@denominator_units[ ;i;i:@numerator_units["s:@original"1s;@;i;" default-transition-duration;	[ ;@;"!defaulto;;o:Sass::Script::Bool;F;i;@;i;" default-transition-function;	[ ;@;"!defaulto;;o;;F;i;@;i;"default-transition-delay;	[ ;@;"!defaulto;;o:Sass::Script::List	;[o;	;"transform;i;@;;o;	;"transform-origin;i;@;;;i:@separator:
comma;@;i;"#transitionable-prefixed-values;	[ ;@;"!defaulto;;i ;"}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!;[ ;	[ ;0;@o:Sass::Tree::MixinDefNode;T;i0;"transition-property;	[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:
@linei1:@operator:eq:@operand2o:Sass::Script::String	:@value"string;i1:@options{ :
@type:identifier;@	:@operand1o:Sass::Script::Funcall
;i1:@keywords{ :
@name"type-of:
@args[o:Sass::Script::Variable	;i1:@underscored_name"property_1;"property-1;@	;@	0[o:Sass::Tree::VariableNode:
@expro;
;i1;{ ;"unquote;[o;	;i1;"property_1;"property-1;@	;@	;i1;"property-1:@children[ ;@	:@guarded0o;;o:Sass::Script::Funcall
;i2:@keywords{ ;"compact:
@args[o:Sass::Script::Variable	;i2:@underscored_name"property_1;"property-1;@o;&	;i2;'"property_2;"property-2;@o;&	;i2;'"property_3;"property-3;@o;&	;i2;'"property_4;"property-4;@o;&	;i2;'"property_5;"property-5;@o;&	;i2;'"property_6;"property-6;@o;&	;i2;'"property_7;"property-7;@o;&	;i2;'"property_8;"property-8;@o;&	;i2;'"property_9;"property-9;@o;&	;i2;'"property_10;"property-10;@;@;i2;"properties;	[ ;@;0u;"¼[o:Sass::Script::Variable	:
@linei3:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ 0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall
;i3:@keywords{ ;"prefixed-for-transition:
@args[o:Sass::Script::String	;"-webkit;i3;	@	:
@type:identifiero; 	;i3;"properties;"properties;	@	;	@	;i3;[" -webkit-transition-property:@children[ ;	@	:@prop_syntax:new:
@tabsi u;"¸[o:Sass::Script::Variable	:
@linei4:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ 0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall
;i4:@keywords{ ;"prefixed-for-transition:
@args[o:Sass::Script::String	;"	-moz;i4;	@	:
@type:identifiero; 	;i4;"properties;"properties;	@	;	@	;i4;["-moz-transition-property:@children[ ;	@	:@prop_syntax:new:
@tabsi u;"°[o:Sass::Script::Variable	:
@linei5:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ 0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall
;i5:@keywords{ ;"prefixed-for-transition:
@args[o:Sass::Script::String	;"-o;i5;	@	:
@type:identifiero; 	;i5;"properties;"properties;	@	;	@	;i5;["-o-transition-property:@children[ ;	@	:@prop_syntax:new:
@tabsi o:Sass::Tree::PropNode;o;&	;i6;'"properties;"properties;@;i6;["transition-property;	[ ;@:@prop_syntax:new:
@tabsi ;%[[o;&;'"property_1;"property-1;{ o;&	;i&;'" default_transition_property;" default-transition-property;@o[o;&;'"property_2;"property-2;@oo;;F;i';@o[o;&;'"property_3;"property-3;@oo;;F;i(;@o[o;&;'"property_4;"property-4;@oo;;F;i);@o[o;&;'"property_5;"property-5;@oo;;F;i*;@o[o;&;'"property_6;"property-6;@oo;;F;i+;@o[o;&;'"property_7;"property-7;@oo;;F;i,;@o[o;&;'"property_8;"property-8;@oo;;F;i-;@o[o;&;'"property_9;"property-9;@oo;;F;i.;@o[o;&;'"property_10;"property-10;@oo;;F;i/;@o;@o;;i ;"¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9;[ ;	[ ;0;@o;!;T;iH;"transition-duration;	[u;"Í[o:Sass::Script::Operation
:
@lineiI:@operator:eq:@operand2o:Sass::Script::String	:@value"string;iI:@options{ :
@type:identifier;@	:@operand1o:Sass::Script::Funcall
;iI:@keywords{ :
@name"type-of:
@args[o:Sass::Script::Variable	;iI:@underscored_name"duration_1;"duration-1;@	;@	0[o:Sass::Tree::VariableNode:
@expro;
;iI;{ ;"unquote;[o;	;iI;"duration_1;"duration-1;@	;@	;iI;"duration-1:@children[ ;@	:@guarded0o;;o;#
;iJ;${ ;"compact;%[o;&	;iJ;'"duration_1;"duration-1;@o;&	;iJ;'"duration_2;"duration-2;@o;&	;iJ;'"duration_3;"duration-3;@o;&	;iJ;'"duration_4;"duration-4;@o;&	;iJ;'"duration_5;"duration-5;@o;&	;iJ;'"duration_6;"duration-6;@o;&	;iJ;'"duration_7;"duration-7;@o;&	;iJ;'"duration_8;"duration-8;@o;&	;iJ;'"duration_9;"duration-9;@o;&	;iJ;'"duration_10;"duration-10;@;@;iJ;"durations;	[ ;@;0o:Sass::Tree::MixinNode;iM;${ ;"experimental;	[ ;%[o;	;"transition-duration;iK;@;;o;&	;iK;'"durations;"durations;@o;	;"	-moz;iL;@;;o;	;"-webkit;iL;@;;o;	;"-o;iL;@;;o:!Sass::Script::UnaryOperation	;iL:@operator:not;@:@operando;	;"-ms;iL;@;;o;-	;iL;.;/;@;0o;	;"-khtml;iL;@;;o;	;"official;iL;@;;;@;%[[o;&;'"duration_1;"duration-1;{ o;&	;i>;'" default_transition_duration;" default-transition-duration;@å[o;&;'"duration_2;"duration-2;@åo;;F;i?;@å[o;&;'"duration_3;"duration-3;@åo;;F;i@;@å[o;&;'"duration_4;"duration-4;@åo;;F;iA;@å[o;&;'"duration_5;"duration-5;@åo;;F;iB;@å[o;&;'"duration_6;"duration-6;@åo;;F;iC;@å[o;&;'"duration_7;"duration-7;@åo;;F;iD;@å[o;&;'"duration_8;"duration-8;@åo;;F;iE;@å[o;&;'"duration_9;"duration-9;@åo;;F;iF;@å[o;&;'"duration_10;"duration-10;@åo;;F;iG;@å;@o;;i ;"õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iP;[ ;	[ ;0;@o;!;T;i`;"transition-timing-function;	[o;;o;#
;ia;${ ;"unquote;%[o;&	;ia;'"function_1;"function-1;@;@;ia;"function-1;	[ ;@;0o;;o;#
;ib;${ ;"compact;%[o;&	;ib;'"function_1;"function-1;@o;&	;ib;'"function_2;"function-2;@o;&	;ib;'"function_3;"function-3;@o;&	;ib;'"function_4;"function-4;@o;&	;ib;'"function_5;"function-5;@o;&	;ib;'"function_6;"function-6;@o;&	;ib;'"function_7;"function-7;@o;&	;ib;'"function_8;"function-8;@o;&	;ib;'"function_9;"function-9;@o;&	;ib;'"function_10;"function-10;@;@;ib;"functions;	[ ;@;0o;,;ie;${ ;"experimental;	[ ;%[o;	;"transition-timing-function;ic;@;;o;&	;ic;'"functions;"functions;@o;	;"	-moz;id;@;;o;	;"-webkit;id;@;;o;	;"-o;id;@;;o;-	;id;.;/;@;0o;	;"-ms;id;@;;o;-	;id;.;/;@;0o;	;"-khtml;id;@;;o;	;"official;id;@;;;@;%[[o;&;'"function_1;"function-1;{ o;&	;iV;'" default_transition_function;" default-transition-function;@i[o;&;'"function_2;"function-2;@io;;F;iW;@i[o;&;'"function_3;"function-3;@io;;F;iX;@i[o;&;'"function_4;"function-4;@io;;F;iY;@i[o;&;'"function_5;"function-5;@io;;F;iZ;@i[o;&;'"function_6;"function-6;@io;;F;i[;@i[o;&;'"function_7;"function-7;@io;;F;i\;@i[o;&;'"function_8;"function-8;@io;;F;i];@i[o;&;'"function_9;"function-9;@io;;F;i^;@i[o;&;'"function_10;"function-10;@io;;F;i_;@i;@o;;i ;"¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;ih;[ ;	[ ;0;@o;!;T;iw;"transition-delay;	[u;"¾[o:Sass::Script::Operation
:
@lineix:@operator:eq:@operand2o:Sass::Script::String	:@value"string;ix:@options{ :
@type:identifier;@	:@operand1o:Sass::Script::Funcall
;ix:@keywords{ :
@name"type-of:
@args[o:Sass::Script::Variable	;ix:@underscored_name"delay_1;"delay-1;@	;@	0[o:Sass::Tree::VariableNode:
@expro;
;ix;{ ;"unquote;[o;	;ix;"delay_1;"delay-1;@	;@	;ix;"delay-1:@children[ ;@	:@guarded0o;;o;#
;iy;${ ;"compact;%[o;&	;iy;'"delay_1;"delay-1;@o;&	;iy;'"delay_2;"delay-2;@o;&	;iy;'"delay_3;"delay-3;@o;&	;iy;'"delay_4;"delay-4;@o;&	;iy;'"delay_5;"delay-5;@o;&	;iy;'"delay_6;"delay-6;@o;&	;iy;'"delay_7;"delay-7;@o;&	;iy;'"delay_8;"delay-8;@o;&	;iy;'"delay_9;"delay-9;@o;&	;iy;'"delay_10;"delay-10;@;@;iy;"delays;	[ ;@;0o;,;i|;${ ;"experimental;	[ ;%[o;	;"transition-delay;iz;@;;o;&	;iz;'"delays;"delays;@o;	;"	-moz;i{;@;;o;	;"-webkit;i{;@;;o;	;"-o;i{;@;;o;-	;i{;.;/;@;0o;	;"-ms;i{;@;;o;-	;i{;.;/;@;0o;	;"-khtml;i{;@;;o;	;"official;i{;@;;;@;%[[o;&;'"delay_1;"delay-1;{ o;&	;im;'"default_transition_delay;"default-transition-delay;@ä[o;&;'"delay_2;"delay-2;@äo;;F;in;@ä[o;&;'"delay_3;"delay-3;@äo;;F;io;@ä[o;&;'"delay_4;"delay-4;@äo;;F;ip;@ä[o;&;'"delay_5;"delay-5;@äo;;F;iq;@ä[o;&;'"delay_6;"delay-6;@äo;;F;ir;@ä[o;&;'"delay_7;"delay-7;@äo;;F;is;@ä[o;&;'"delay_8;"delay-8;@äo;;F;it;@ä[o;&;'"delay_9;"delay-9;@äo;;F;iu;@ä[o;&;'"delay_10;"delay-10;@äo;;F;iv;@ä;@o;;i ;"*/* Transition all-in-one shorthand */;i;[ ;	[ ;0;@o;!;T;i;"single-transition;	[o;,;i;${ ;"transition;	[ ;%[o;#
;i;${ ;"compact;%[o;	;[	o;&	;i;'"property;"property;@o;&	;i;'"duration;"duration;@o;&	;i;'"function;"function;@o;&	;i;'"
delay;"
delay;@;i;:
space;@;@;@;%[	[o;&;'"property;"property;{ o;&	;i};'" default_transition_property;" default-transition-property;@8[o;&;'"duration;"duration;@8o;&	;i~;'" default_transition_duration;" default-transition-duration;@8[o;&;'"function;"function;@8o;&	;i;'" default_transition_function;" default-transition-function;@8[o;&;'"
delay;"
delay;@8o;&	;i;'"default_transition_delay;"default-transition-delay;@8;@o;!;T;i;"transition;	[u;"î[o:Sass::Script::Operation
:
@linei:@operator:eq:@operand2o:Sass::Script::String	:@value"default;i:@options{ :
@type:identifier;@	:@operand1o:Sass::Script::Variable	;i:@underscored_name"transition_1:
@name"transition-1;@	0[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
;i:@keywords{ ;"compact:
@args[o:Sass::Script::List	;[	o;	;i;" default_transition_property;" default-transition-property;@	o;	;i;" default_transition_duration;" default-transition-duration;@	o;	;i;" default_transition_function;" default-transition-function;@	o;	;i;"default_transition_delay;"default-transition-delay;@	;i:@separator:
space;@	;@	;i;"transition-1:@children[ ;@	:@guarded0o;;o;;F;i;@;i;"transitions;	[ ;@;0u;"g[o:Sass::Script::Operation
:
@linei:@operator:and:@operand2o; 
;i;:eq;	o:Sass::Script::String	:@value"	list;i:@options{ :
@type:identifier;@
:@operand1o:Sass::Script::Funcall
;i:@keywords{ :
@name"type-of:
@args[o;
;i;{ ;"nth;[o:Sass::Script::Variable	;i:@underscored_name"transition_1;"transition-1;@
o:Sass::Script::Number:@denominator_units[ ;i;i:@numerator_units[ :@original"1;@
;@
;@
;@
;o; 
;i;;
;	o;	;"	list;i;@
;;;@
;o;
;i;{ ;"type-of;[o;	;i;"transition_1;"transition-1;@
;@
u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::Funcall
:
@linei:@keywords{ :
@name"compact:
@args[o:Sass::Script::Variable	;i:@underscored_name"transition_1;
"transition-1:@options{ o;	;i;"transition_2;
"transition-2;@o;	;i;"transition_3;
"transition-3;@o;	;i;"transition_4;
"transition-4;@o;	;i;"transition_5;
"transition-5;@o;	;i;"transition_6;
"transition-6;@o;	;i;"transition_7;
"transition-7;@o;	;i;"transition_8;
"transition-8;@o;	;i;"transition_9;
"transition-9;@o;	;i;"transition_10;
"transition-10;@;@;i;
"transitions:@children[ ;@:@guarded0[o:Sass::Tree::VariableNode:
@expro;
;i;{ ;"	join;[o;	;i;"transition_1;"transition-1;@
o;
;i;{ ;"compact;[o;	;i;"transition_2;"transition-2;@
o;	;i;"transition_3;"transition-3;@
o;	;i;"transition_4;"transition-4;@
o;	;i;"transition_5;"transition-5;@
o;	;i;"transition_6;"transition-6;@
o;	;i;"transition_7;"transition-7;@
o;	;i;"transition_8;"transition-8;@
o;	;i;"transition_9;"transition-9;@
o;	;i;"transition_10;"transition-10;@
;@
o;	;"
comma;i;@
;;;@
;i;"transitions:@children[ ;@
:@guarded0o;;o;#
;i;${ ;"comma-list;%[ ;@;i;"delays;	[ ;@;0o;;o;;F;i;@;i;"has-delays;	[ ;@;0o;;o;#
;i;${ ;"comma-list;%[ ;@;i;"webkit-value;	[ ;@;0o;;o;#
;i;${ ;"comma-list;%[ ;@;i;"moz-value;	[ ;@;0o;;o;#
;i;${ ;"comma-list;%[ ;@;i;"o-value;	[ ;@;0o;;i ;"/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;[ ;	[ ;0;@o:Sass::Tree::EachNode;T;i¢;	[o;;i ;"}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£;[ ;	[ ;0;@o;;o;#
;i¥;${ ;"nth;%[o;&	;i¥;'"transition;"transition;@o;;[ ;i;i¥;[ ;"1;@;@;i¥;"property;	[ ;@;0o;;o;;F;i¦;@;i¦;"duration;	[ ;@;0o;;o;;F;i§;@;i§;"timing-function;	[ ;@;0o;;o;;F;i¨;@;i¨;"
delay;	[ ;@;0u;"
[o:Sass::Script::Operation
:
@linei©:@operator:gt:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;i©:@numerator_units[ :@original"1:@options{ ;@:@operand1o:Sass::Script::Funcall
;i©:@keywords{ :
@name"length:
@args[o:Sass::Script::Variable	;i©:@underscored_name"transition;"transition;@;@0[o:Sass::Tree::VariableNode:
@expro;
;i©;{ ;"nth;[o;	;i©;"transition;"transition;@o;
;@;i;i©;[ ;"2;@;@;i©;"duration:@children[ ;@:@guarded0u;"[o:Sass::Script::Operation
:
@lineiª:@operator:gt:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;iª:@numerator_units[ :@original"2:@options{ ;@:@operand1o:Sass::Script::Funcall
;iª:@keywords{ :
@name"length:
@args[o:Sass::Script::Variable	;iª:@underscored_name"transition;"transition;@;@0[o:Sass::Tree::VariableNode:
@expro;
;iª;{ ;"nth;[o;	;iª;"transition;"transition;@o;
;@;i;iª;[ ;"3;@;@;iª;"timing-function:@children[ ;@:@guarded0u;"M[o:Sass::Script::Operation
:
@linei«:@operator:gt:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;i«:@numerator_units[ :@original"3:@options{ ;@:@operand1o:Sass::Script::Funcall
;i«:@keywords{ :
@name"length:
@args[o:Sass::Script::Variable	;i«:@underscored_name"transition;"transition;@;@0[o:Sass::Tree::VariableNode:
@expro;
;i«;{ ;"nth;[o;	;i«;"transition;"transition;@o;
;@;i	;i«;[ ;"4;@;@;i«;"
delay:@children[ ;@:@guarded0o;;o:Sass::Script::Bool;T;i«;@;i«;"has-delays;[ ;@;0o;;i ;";/* If a delay is provided without a timing function */;i­;[ ;	[ ;0;@u;"^[o:Sass::Script::Operation
:
@linei®:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;i®;:not:@options{ :@operando:Sass::Script::Variable	;i®:@underscored_name"
delay:
@name"
delay;@;@:@operand1o:Sass::Script::Funcall
;i®:@keywords{ ;"is-time:
@args[o;	;i®;"timing_function;"timing-function;@;@0[o:Sass::Tree::VariableNode:
@expro;	;i®;"timing_function;"timing-function;@;i®;"
delay:@children[ ;@:@guarded0o;;o:Sass::Script::Bool:@valueF;i®;@;i®;"timing-function;[ ;@;0o;;o;;T;i®;@;i®;"has-delays;[ ;@;0o;;i ;"9/* Keep a list of delays in case one is specified */;i°;[ ;	[ ;0;@o;;o;#
;i±;${ ;"append;%[o;&	;i±;'"delays;"delays;@o;#
;i±;${ ;"if;%[o;&	;i±;'"
delay;"
delay;@o;&	;i±;'"
delay;"
delay;@o;;[ ;i ;i±;["s;"0s;@;@;@;i±;"delays;	[ ;@;0o;;o;#
;i³;${ ;"append;%[o;&	;i³;'"webkit_value;"webkit-value;@o;#
;i³;${ ;"compact;%[o;	;[o;#
;i³;${ ;"prefixed-for-transition;%[o;	;"-webkit;i³;@;;o;&	;i³;'"property;"property;@;@o;&	;i³;'"duration;"duration;@o;&	;i³;'"timing_function;"timing-function;@;i³;;1;@;@;@;i³;"webkit-value;	[ ;@;0o;;o;#
;i´;${ ;"append;%[o;&	;i´;'"moz_value;"moz-value;@o;#
;i´;${ ;"compact;%[o;	;[	o;#
;i´;${ ;"prefixed-for-transition;%[o;	;"	-moz;i´;@;;o;&	;i´;'"property;"property;@;@o;&	;i´;'"duration;"duration;@o;&	;i´;'"timing_function;"timing-function;@o;&	;i´;'"
delay;"
delay;@;i´;;1;@;@;@;i´;"moz-value;	[ ;@;0o;;o;#
;iµ;${ ;"append;%[o;&	;iµ;'"o_value;"o-value;@o;#
;iµ;${ ;"compact;%[o;	;[	o;#
;iµ;${ ;"prefixed-for-transition;%[o;	;"-o;iµ;@;;o;&	;iµ;'"property;"property;@;@o;&	;iµ;'"duration;"duration;@o;&	;iµ;'"timing_function;"timing-function;@o;&	;iµ;'"
delay;"
delay;@;iµ;;1;@;@;@;iµ;"o-value;	[ ;@;0:	@var"transition;@:
@listo;&	;i¢;'"transitions;"transitions;@u;"é[o:Sass::Script::Variable	:
@linei¸:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;i¸;"webkit_value;"webkit-value;	@	;i¸;["-webkit-transition:@children[ ;	@	:@prop_syntax:new:
@tabsi o:Sass::Tree::CommentNode:@silenti ;"j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹:@lines[ ;[ :
@loud0;	@	u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:@underscored_name"has_delays:
@name"has-delays:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;iº;"delays;"delays;	@	;iº;["-webkit-transition-delay:@children[ ;	@	:@prop_syntax:new:
@tabsi u;"#[o:Sass::Script::Variable	:
@linei»:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;i»;"moz_value;"moz-value;	@	;i»;["-moz-transition:@children[ ;	@	:@prop_syntax:new:
@tabsi u;"[o:Sass::Script::Variable	:
@linei¼:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;i¼;"o_value;"o-value;	@	;i¼;["-o-transition:@children[ ;	@	:@prop_syntax:new:
@tabsi o;(;o;&	;i½;'"transitions;"transitions;@;i½;["transition;	[ ;@;);*;+i ;%[[o;&;'"transition_1;"transition-1;{ o;	;"default;i;@9;;[o;&;'"transition_2;"transition-2;@9o;;F;i;@9[o;&;'"transition_3;"transition-3;@9o;;F;i;@9[o;&;'"transition_4;"transition-4;@9o;;F;i;@9[o;&;'"transition_5;"transition-5;@9o;;F;i;@9[o;&;'"transition_6;"transition-6;@9o;;F;i;@9[o;&;'"transition_7;"transition-7;@9o;;F;i;@9[o;&;'"transition_8;"transition-8;@9o;;F;i;@9[o;&;'"transition_9;"transition-9;@9o;;F;i;@9[o;&;'"transition_10;"transition-10;@9o;;F;i;@9;@o;;i ;"Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀ;[ ;	[ ;0;@o:Sass::Tree::FunctionNode;T;iÁ;"comma-list;	[o:Sass::Tree::ReturnNode	;o;#
;iÂ;${ ;"	join;%[o;	;[ ;iÂ;;1;@o;&	;iÂ;'"	list;"	list;@o;	;"
comma;iÂ;@;;;@;iÂ;	[ ;@;%[[o;&;'"	list;"	list;@o;	;[ ;iÁ;;1;@;@o;;i ;"i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅ;[ ;	[ ;0;@o;5;T;iÆ;"prefixed-for-transition;	[u;"[o:Sass::Script::Operation
:
@lineiÇ:@operator:eq:@operand2o:Sass::Script::String	:@value"	list;iÇ:@options{ :
@type:identifier;@	:@operand1o:Sass::Script::Funcall
;iÇ:@keywords{ :
@name"type-of:
@args[o:Sass::Script::Variable	;iÇ:@underscored_name"property;"property;@	;@	u:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@lineiÎ:@keywords{ :
@name"
index:
@args[o:Sass::Script::Variable	;iÎ:@underscored_name"#transitionable_prefixed_values;"#transitionable-prefixed-values:@options{ o;
	;iÎ;"property;"property;@;@u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:
@lineiÑ:@underscored_name"property:
@name"property:@options{ ;iÑ:@children[ ;@[o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@aftero;;0;iÏ:@originally_textF:	@mido;
	;iÏ;"property;"property;@:@whitespace_after0:@beforeo;;0;iÏ;:originally_text;o:Sass::Script::String	:@value"-;iÏ;@:
@type:identifier;F;0;@:@whitespace_before0;@;0;iÏ;F;o;
	;iÏ;"prefix;"prefix;@;0;0;@;i;iÏ:@children[ ;@[o:Sass::Tree::VariableNode:
@expro;
;iÈ;{ ;"comma-list;[ ;@	;iÈ;"new-list:@children[ ;@	:@guarded0o:Sass::Tree::EachNode:@has_childrenT;iÉ;[o;;o;
;iÊ;{ ;"append;[o;	;iÊ;"new_list;"new-list;@	o;
;iÊ;{ ;"prefixed-for-transition;[o;	;iÊ;"prefix;"prefix;@	o;	;iÊ;"v;"v;@	;@	;@	;iÊ;"new-list;[ ;@	;0:	@var"v;@	:
@listo;	;iÉ;"property;"property;@	o:Sass::Tree::ReturnNode	;o;	;iÌ;"new_list;"new-list;@	;iÌ;[ ;@	;%[[o;&;'"prefix;"prefix;@0[o;&;'"property;"property;@0;@o;;i ;"7/* Checks if the value given is a unit of time. */;iÖ;[ ;	[ ;0;@o;5;T;i×;"is-time;	[u;"ù[o:Sass::Script::Operation
:
@lineiØ:@operator:eq:@operand2o:Sass::Script::String	:@value"number;iØ:@options{ :
@type:identifier;@	:@operand1o:Sass::Script::Funcall
;iØ:@keywords{ :
@name"type-of:
@args[o:Sass::Script::Variable	;iØ:@underscored_name"
value;"
value;@	;@	u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@valueF:
@lineiÛ:@options{ ;	iÛ:@children[ ;
@	[o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	;iÙ;:not;@	:@operando;	;iÙ;;;@	;o;
;iÙ;{ ;"
index;[o:Sass::Script::List	;[o;
	;"s;iÙ;@	;;o;
	;"ms;iÙ;@	;;;iÙ:@separator:
space;@	o;
;iÙ;{ ;"	unit;[o;	;iÙ;"
value;"
value;@	;@	;@	;iÙ:@children[ ;@	;%[[o;&;'"
value;"
value;@0;@;@